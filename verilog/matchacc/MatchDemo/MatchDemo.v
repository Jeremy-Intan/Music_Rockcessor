
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module MatchDemo(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

//reg start;
reg [1535:0] bmr;
wire finish;
wire [15:0] noteReg, lengthReg;
reg [6:0] note, length;

//=======================================================
//  Structural coding
//=======================================================

MatchAccelerator MatchAccelerator(.rst(KEY[0]),.clk(CLOCK_50),.bmr(bmr),.noteReg(noteReg),.lengthReg(lengthReg),.start(~KEY[3]),.finish(finish));

assign HEX0 = note;
assign HEX1 = length;

always @(posedge CLOCK_50) begin
	note <= 7'h7F;
	length <= 7'h7F;
	if(noteReg[3:0] == 4'hA) begin
		note <= 7'h08;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'hB) begin
		note <= 7'h00;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'hC) begin
		note <= 7'h46;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'hD) begin
		note <= 7'h40;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'hE) begin
		note <= 7'h06;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'hF) begin
		note <= 7'h0E;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end else if(noteReg[3:0] == 4'h1) begin
		note <= 7'h42;
		if(lengthReg[4:0] == 5'h10) begin
			length <= 7'h19;
		end else begin
			length <= 7'h24;
		end
	end
end

always @(posedge CLOCK_50) begin
	bmr <= 1535'h0;
	if(SW[0] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};//A
	end else if(SW[1] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};//Ah
	end else if(SW[2] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,1'h0,24'hFFFFFF,1'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFF};//B
	end else if(SW[3] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,1'h0,4'hF,16'h0,4'hF,1'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFF};//Bh
	end else if(SW[4] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//E
	end else if(SW[5] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFF};//Ch
	end else if(SW[6] == 1'b1) begin
		bmr <= {24'hFFFFFF,200'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,1'h0,4'hF,16'h0,4'hF,1'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//Fh
	end else if(SW[7] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};
	end else if(SW[8] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};
	end else if(SW[9] == 1'b1) begin
		bmr <= {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};
	end else begin
		
	end
end

/*initial begin
	clk = 1'b0;
	rst = 1'b0;
	#10 rst = 1'b1;
	start = 1'b0;
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};//A
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFF};//C
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//E
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,30'h0,12'hFFF,11'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,2'h0,22'h3FFFFF,2'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,29'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//G
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,1'h0,24'hFFFFFF,1'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFF};//B
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,1'h0,24'hFFFFFF,1'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFFF,360'h0,24'hFFFFF};//D
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,200'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,18'h3FFFF,5'h0,20'hFFFFF,3'h0,22'h3FFFFF,1'h0,24'hFFFFFF,1'h0,22'h3FFFFF,3'h0,20'hFFFFF,5'h0,18'h3FFFF,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//F
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFF};//A half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFF};//C half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,32'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,32'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//E half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,30'h0,12'hFFF,11'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,2'h0,3'h7,16'h0,3'h7,2'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,29'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//G half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,360'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,1'h0,4'hF,16'h0,4'hF,1'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFF};//B half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,336'h0,24'hFFFFFF,224'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,1'h0,4'hF,16'h0,4'hF,1'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFFF,360'h0,24'hFFFFF};//D half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
	
	bmr = {24'hFFFFFF,200'h0,8'hFF,13'h0,14'h3FFF,9'h0,16'hFFFF,7'h0,5'h1F,8'h0,5'h1F,5'h0,4'hF,12'h0,4'hF,3'h0,4'hF,14'h0,4'hF,1'h0,4'hF,16'h0,4'hF,1'h0,4'hF,14'h0,4'hF,3'h0,4'hF,12'h0,4'hF,5'h0,5'h1F,8'h0,5'h1F,7'h0,16'hFFFF,9'h0,14'h3FFF,13'h0,8'hFF,224'h0,24'hFFFFFF,360'h0,24'hFFFFFF,360'h0,24'hFFFFF};//F half
	
	#100
	start = 1'b1;
	#15
	start = 1'b0;
	@(posedge finish)
	@(negedge finish)
	#100
end*/

endmodule
